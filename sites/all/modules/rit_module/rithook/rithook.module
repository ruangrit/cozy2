<?php


function rithook_menu () {
    $items['inventory'] = array(
        'title' => 'our products',
        'page callback' => 'rithook_inventory_page',
        'access arguments' => array('access content'),
    );
    $items['customer'] = array(
        'title' => 'Customer',
        'page callback' => 'rithook_customer_page',
        'access arguments' => array('access content'),
    );
    $items['supplier'] = array(
        'title' => 'Supplier',
        'page callback' => 'rithook_supplier_page',
        'access arguments' => array('access content'),
    );
    return $items;
}     

function rithook_inventory_page () {
    return theme('rithook_inventory_page', array('title' => 'Testing'));
}
function rithook_customer_page () {
    return theme('rithook_customer_page', array('title' => 'Testing'));
}
function rithook_supplier_page () {
    return theme('rithook_supplier_page', array('title' => 'Testing'));
}


/*
    Implements hook_theme();
*/
function rithook_theme($existing, $type, $theme, $path) {
    return array(
        'rithook_inventory_page' => array(
            'variables' => array('title' => NULL),
            'template' => 'inventory',
        ),
        'rithook_customer_page' => array(
            'variables' => array('title' => NULL),
            'template' => 'customer',
        ),
        'rithook_supplier_page' => array(
            'variables' => array('title' => NULL),
            'template' => 'supplier',
        ),
    );
} 

function rithook_form_submit($form, &$form_state){ 

	dpm($form);

}


function rithook_form_alter(&$form, &$form_state, $form_id) {

	// add css to multiple ode form
	//dpm($form);
	if ($form_id == 'customers_node_form' || $form_id == 'suppliers_node_form' || $form_id == 'products_node_form') {
		$form['author']['#access'] = FALSE;
		$form['#attached']['css'] = array(
      			drupal_get_path('module', 'rithook') . '/css/node_form.css',
      	);

      	// ==== hide add more for customer from web or shop
		//global $user;
		//if (!user_has_role(4) && !user_has_role(3)) {
		if (isset($_GET['csf'])  && ($_GET['csf'] == 'web' || $_GET['csf'] == 'shop') ) {
      		$form['options']['#access'] = FALSE;
      		$form['revision_information']['#access'] = FALSE;
			
		}


	}

	if ($form_id == 'customers_node_form') {

		drupal_set_title('New Customer');

		$form['field_customer_code']['#access'] = FALSE;
		$form['field_customer_source']['#access'] = FALSE;

		//$form['field_customer_address']['und'][0]['add_more']['value'] = 'Add more address';

		$form['#attached']['js'] = array(
      			drupal_get_path('module', 'rithook') . '/js/customers_node_form.js',
      	);

 		drupal_add_css(drupal_get_path('module', 'rithook') . '/css/customers_node_form.css');

		// Add js to check rev if field have change
		if (arg(1) != 'add') {
	 		drupal_add_js(drupal_get_path('module', 'rithook') . '/js/customers_node_form_edit.js');
		}
      	
	}

	elseif($form_id == 'suppliers_node_form') {

		drupal_set_title('New Supplier');

		$form['field_supplier_code']['#access'] = FALSE;


		$form['#attached']['js'] = array(
      			drupal_get_path('module', 'rithook') . '/js/suppliers_node_form.js',
      	);

		// Add js to check rev if field have change
		if (arg(1) != 'add') {
	 		drupal_add_js(drupal_get_path('module', 'rithook') . '/js/suppliers_node_form_edit.js');
		}


	}
	elseif($form_id == 'products_node_form') {
		drupal_set_title('New Product');
		$form['field_product_supplier']['und']['#suffix'] .= '<div>
			<a class="various" data-fancybox-type="iframe" href="/node/add/suppliers">Add new supplier</a>
		</div>';
		$form['#attached']['js'] = array(
      			drupal_get_path('module', 'rithook') . '/js/products_node_form.js',
      	);

 	 	//drupal_add_css(drupal_get_path('module', 'rithook') . '/css/products_node_form.css');
		// Add js to check rev if field have change
		if (arg(1) != 'add') {
	 		drupal_add_js(drupal_get_path('module', 'rithook') . '/js/products_node_form_edit.js');
		}


	}
}

function rithook_node_submit($node, $form, &$form_state) {
	dpm($node);
	dpm($form);
	if ($node->type == 'suppliers' && !isset($node->field_supplier_code['und'][0])) {
		$node->field_supplier_code['und'][0]['value'] = gen_node_code($node);
	}
	elseif ($node->type == 'customers' && !isset($node->field_customer_code['und'][0])) {
		$node->field_customer_code['und'][0]['value'] = gen_node_code($node);
	}
	elseif ($node->type == 'products') {
		$run_num = substr($node->field_product_code['und'][0]['value'], 0, 4);
		if ($run_num == 'XXXX') {
			$node->field_product_code['und'][0]['value'] = gen_node_code($node);
		}
	}
	
}

function gen_node_code($node) {

	
	if ($node->type == 'suppliers') {
		$counter = db_query("SELECT count(nid) FROM {node} WHERE type='".$node->type."' ")->fetchField();
		$run_num = str_pad($counter+1, 4, '0', STR_PAD_LEFT);
		return 'SP-'.$run_num.date('m').date('Y');
	}
	elseif ($node->type == 'customers') {
		$counter = db_query("SELECT count(nid) FROM {node} WHERE type='".$node->type."' ")->fetchField();
		$run_num = str_pad($counter+1, 4, '0', STR_PAD_LEFT);
		return 'CUST-'.$run_num.date('m').date('Y');
	}
	elseif ($node->type == 'products') {
		$counter = db_query("SELECT count(nid) FROM {node} WHERE type='".$node->type."' ")->fetchField();
		$run_num = str_pad($counter+1, 4, '0', STR_PAD_LEFT);
		return $run_num.substr($node->field_product_code['und'][0]['value'], 4);

	}

}

function rit_hook_display_multiple_comma($val) {

	$array_val = array();
	foreach ($val as $key => $value) {
		$array_val[] = $value['email'];
	}

	return implode(',' ,$array_val);
}